{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface JPushPlugin {\n  init(): Promise<{ data: 'notDetermined' | 'denied' | 'authorized' | 'provisional' }>;\n  getRegistrationID(): Promise<{ data: { code?: string; registrationID: string } }>;\n  setTags(options: {\n    sequence: number;\n    tags: string[];\n  }): Promise<{ data: { iResCode: number; iTags: string[]; seq: number } }>;\n  setAlias(options: {\n    sequence: number;\n    alias: string;\n  }): Promise<{ data: { iResCode: number; iAlias: string; seq: number } }>;\n  addListener(\n    name: 'openNotification',\n    callback: {\n      (): {\n        badge: number;\n        body: string;\n        subtitle: string;\n        title: string;\n        extras: string;\n      };\n    },\n  ): void;\n  getRemoteNotification(): Promise<any>;\n  setBadge(options: { value: number }): Promise<{ data: boolean }>;\n  clearAllNotifications(): Promise<{ data: boolean }>;\n  clearNotificationById(options: { value: number }): Promise<{ data: boolean }>;\n}\n"]}